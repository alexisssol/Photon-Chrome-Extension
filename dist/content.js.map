{"version":3,"file":"content.js","mappings":";;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,qDAAqD,eAAe;AACjH;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,eAAe,IAAI,iBAAiB;AAClG,6FAA6F,iCAAiC,2CAA2C,IAAI,uBAAuB,WAAW,iCAAiC;AAChP;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yDAAyD,UAAU;AACnE;AACA;AACA;AACA,SAAS;AACT,uCAAuC,gCAAgC;AACvE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,CAAC;AACD;AACA,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://chrome_extension/./src/content.ts"],"sourcesContent":["\"use strict\";\n// Function to create and style the button\nfunction createStyledButton() {\n    const button = document.createElement(\"button\");\n    button.className = \"show-creator-button\";\n    button.textContent = \"ðŸ§· Show Funding\";\n    button.setAttribute(\"data-tooltip-id\", \"tooltip-memescopecard\");\n    button.setAttribute(\"data-tooltip-content\", \"Show Funding\");\n    Object.assign(button.style, {\n        padding: \"0\",\n        border: \"0\",\n        color: \"rgb(181, 183, 218)\",\n        backgroundColor: \"transparent\",\n        cursor: \"pointer\",\n        fontFamily: '\"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n        fontSize: \"11px\"\n    });\n    button.addEventListener('click', async (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        // Show loading spinner\n        button.innerHTML = '<div class=\"loading-spinner\"></div>';\n        // Fire the click event of the span element\n        const spanElement = button.parentElement?.parentElement?.querySelector('div.O1Yy1xXe2uVeuSuj862s.js-copy-to-clipboard');\n        if (spanElement) {\n            try {\n                const mintAddress = spanElement.getAttribute('data-address');\n                chrome.runtime.sendMessage({ action: 'getCreatorFundingWalletAndBalance', data: { mintAddress } }, (response) => {\n                    if (chrome.runtime.lastError) {\n                        console.error(chrome.runtime.lastError);\n                    }\n                    else if (response) {\n                        if (response.success) {\n                            button.innerHTML = `\r\n                                <div style=\"text-align: left; color: #b1bc8d;\">${response.funding}</div>\r\n                                <div style=\"text-align: left\"><span style=\"color: #5eeae1\">${Math.trunc(response.solBalance)} (SOL)</span> | <span style=\"color: #c8a27e;\">${response.tokenBalance} Tokens ($${Math.floor(response.tokenAmount)})</span></div>\r\n                            `;\n                        }\n                        else {\n                            button.innerHTML = `\r\n                                <div class=\"error-message\">\r\n                                    <span>Error: ${response.error}</span>\r\n                                </div>\r\n                            `;\n                            setTimeout(() => {\n                                button.innerHTML = \"ðŸ§· Show Funding\";\n                            }, 3000);\n                        }\n                    }\n                });\n            }\n            catch (err) {\n                button.innerHTML = \"ðŸ§· Show Funding\";\n            }\n        }\n        else {\n            button.innerHTML = \"ðŸ§· Show Funding\";\n        }\n    });\n    return button;\n}\nfunction handleDivChanges(mutation, observer, divElement) {\n    // console.log('Changed Div element:', (divElement.parentElement?.previousSibling as Element)?.querySelector('h2.G3nWYwyOTPi2QhQqDOSG')?.innerHTML);\n    // Process only added nodes\n    mutation.addedNodes.forEach(node => {\n        if (node instanceof HTMLElement && node.matches('div.sBVBv2HePq7qYTpGDmRM.VTmpJ0jdbJuSJQ4HKGlN')) {\n            const fragment = document.createDocumentFragment();\n            const newDiv = document.createElement('div');\n            newDiv.setAttribute(\"bis_skin_checked\", \"1\");\n            // Find the specific div under the <a> tag\n            const targetDiv = node.querySelector('div.oii6JFeHBrPRAGAatOXP')?.parentElement;\n            if (targetDiv && !targetDiv.querySelector('button.show-creator-button')) {\n                newDiv.appendChild(createStyledButton());\n                fragment.appendChild(newDiv);\n                targetDiv.appendChild(fragment);\n            }\n        }\n    });\n}\n// Function to create and start observing div elements with the specified class name\nfunction observeDivElements(className) {\n    const divElements = document.querySelectorAll(`div.${className}`);\n    divElements.forEach(divElement => {\n        const observer = new MutationObserver((mutations, observer) => {\n            mutations.forEach(mutation => handleDivChanges(mutation, observer, divElement));\n        });\n        observer.observe(divElement, { childList: true, subtree: true });\n    });\n}\n// Create a MutationObserver to detect changes in the DOM\nconst observer = new MutationObserver((mutations, observer) => {\n    // Check if the specific element has been fully rendered\n    const specificElement = document.querySelector('div.l-row.l-row-gap--s.u-flex-grow-full');\n    if (specificElement) {\n        observer.disconnect(); // Stop observing after the initial render\n        observeDivElements('dbIzlq2D2W9wqE6dpwdZ');\n    }\n});\n// Start observing the document for changes to find the specific element\nobserver.observe(document, { childList: true, subtree: true });\n// Add styles for the loading spinner directly in JavaScript\nconst style = document.createElement('style');\nstyle.innerHTML = `\r\n.loading-spinner {\r\n    border: 4px solid #252837;\r\n    border-left-color: #419c9c;\r\n    border-radius: 50%;\r\n    width: 13px;\r\n    height: 13px;\r\n    animation: spin 1s linear infinite;\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n}\r\n\r\n@keyframes spin {\r\n    0% {\r\n        transform: rotate(0deg);\r\n    }\r\n    100% {\r\n        transform: rotate(360deg);\r\n    }\r\n}\r\n\r\n.error-message {\r\n    color: #dd4785;\r\n    font-size: 11px;\r\n\r\n}\r\n`;\ndocument.head.appendChild(style);\n"],"names":[],"sourceRoot":""}